--실습문제 --
--도서관리 프로그램을 만들기 위한 테이블들 만들기--
--이때, 제약조건에 이름을 부여할 것
--   각 컬럼에 주석달기

DROP TABLE TB_RENT;
DROP TABLE TB_MEMBER;
DROP TABLE TB_BOOK;
DROP TABLE TB_PUBLISHER;

/*
    1. 출판사들에 대한 데이터를 담기위한 출판사 테이블(TB_PUBLISHER)
    컬럼 : PUB_NO(출판사 번호) - 기본키(PUBLISHER_PK)
          PUB_NAME(출판사명) -- NOT NULL(PUBLISHER_NN)
          PHONE(출판사전화번호) -- 제약조건없음
*/
CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
    PUB_NAME VARCHAR2(20) CONSTRAINT PUBLISHER_NN NOT NULL,
    PHONE VARCHAR(13)
);
/*
    강사님 정답
    CREATE TABLE TB_PUBLISHER(
        PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
        PUB_NAME VARCHAR2(20) CONSTRAINT PUBLISHER_NN NOT NULL,
        PHONE VARCHAR(13)
    )

*/
COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사전화번호';
--샘플 3개정도 생성
INSERT INTO TB_PUBLISHER VALUES(01, '공기출판사', '010-1111-2222');
INSERT INTO TB_PUBLISHER VALUES(04, '글자출판사', '010-1234-6666');
INSERT INTO TB_PUBLISHER VALUES(106, '복사출판사', '010-4578-4851');



/*
    2. 도서들에 대한 데이터를 담기위한 도서 테이블(TB_BOOK)
    컬럼 : BK_NO(도서번호)--기본키(BOOK_PK)
          BK_TITLE(도서명)--NOT NULL(BOOK__NN_TITLE)
          BK_AUTHOR(저자명)--NOT NULL(BOOK__NN_AUTHOR)
          BK_PRICE(가격)-- 제약조건없음
          BK_PUB_NO(출판사 번호)--외래키(BOOK_FK)(TB_PUBLISHER테이블을 참조)
                                이때 참조하고 있는 부모데이터 삭제시 자식데이터도 삭제 되도록 옵션지정
                                
*/
CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
    BK_TITLE VARCHAR2(100) CONSTRAINT BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR2(20) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE VARCHAR2(8),
    BK_PUB_NO NUMBER CONSTRAINT FOREIGN KEY(BK_PUB_NO) REFERENCES TB_PUBLISHER(PUB_NO) ON DELETE CASCADE
--내가 쓴것: BK_PUB_NO NUMBER CONSTRAINT BOOK_FK REFERENCES TB_PUBLISHER(PUB_NO) ON DELETE CASCADE
);


COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사 번호';

--5개 정도의 샘플 데이터 추가하기
INSERT INTO TB_BOOK VALUES (06,'범인잡기','남도일', '3,000', 106);
INSERT INTO TB_BOOK VALUES (104,'동물농장','기린', '2,000', 04);
INSERT INTO TB_BOOK VALUES (75,'야채키우는방법','가지', '6,000', 04);
INSERT INTO TB_BOOK VALUES (26,'나니야연대기','연대기', '10,000', 106);
INSERT INTO TB_BOOK VALUES (01,'가짜뉴스 판별법','김뉴스', '8,000', 01);


/*
    3. 회원에 대한 데이터를 담기위한 회원 테이블(TB_MEMBER)
    컬럼명 : MEMBER_NO(회원번호) -- 기본키(MEMBER_PK)
            MEMBER_ID(아이디) -- 중복금지(MEMBER_UQ_ID)
            MEMBER_PWD(비밀번호) -- NOT NULL(MEMBER_NN_PWD)
            MEMBER_NAME(회원명) -- NOT NULL(MEMBER_NN_NAME)
            GENDER(성별) -- M또는 F로 입력되도록 제한(MEMBER_CK_GEN)
            ADDRESS(주소) -- 제약조건없음
            PHONE(연락처)-- 제약조건없음
            STATUS(탈퇴여부) -- 기본값을 N으로 지정, 그리고 N또는 Y만 입력되도록 제약조건 설정(MEMBER_CK_STA)
            ENROLL_DATE(가입일) -- 기본값으로 SYSDATE, NOT NULL 제약조건(MEMBER_NN_EN)
*/
CREATE TABLE TB_MEMBER(
    MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) UNIQUE,
    MEMBER_PWD VARCHAR2(30) CONSTRAINT MEMBER_NN_PWD NOT NULL,
    MEMBER_NAME VARCHAR2(20) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR(3) CONSTRAINT MEMBER_NN_GEN CHECK(GENDER IN('M','F')),
    ADDRESS VARCHAR2(100),
    PHONE VARCHAR2(16),
    STATUS CHAR(3) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN('N','Y')),
    ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL 
);


--5개 정도의 샘플 데이터 추가하기

INSERT INTO TB_MEMBER VALUES(111,'USER1','PWD1','김가네','M','서울시','010-1111-1234',DEFAULT,DEFAULT);
INSERT INTO TB_MEMBER VALUES(106,'USER2','PWD2','유가네','F','수원시','010-1111-2334',DEFAULT,DEFAULT);
INSERT INTO TB_MEMBER VALUES(87,'USER3','PWD3','최가네','F','군포시','010-1111-7434',DEFAULT,DEFAULT);
INSERT INTO TB_MEMBER VALUES(42,'USER4','PWD4','송가네','M','대구시','010-1111-1234',DEFAULT,DEFAULT);
INSERT INTO TB_MEMBER VALUES(93,'USER5','PWD5','구가네','F','부산시','010-1111-1434',DEFAULT,DEFAULT);

/*
    4.어떤 회원이 어떤 도서를 대여했는지에 대한 대여목록 테이블(TB_RENT)
    컬럼명 : RENT_NO(대여번호)-- 기본키(RENT_PK)
            RENT_MEM_NO(대여회원번호)-- 외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_BOOK_NO(대여도서번호)-- 외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_DATE(대여일) -- 기본값 SYSDATE
*/
CREATE TABLE TB_RENT(
    RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    RENT_MEN_NO NUMBER,  -- 내가 한것:CONSTRAINT RENT_FK_MEM REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL,
    RENT_BOOK_NO NUMBER, -- 내가 한것:CONSTRAINT RENT_FK_BOOK REFERENCES TB_BOOK(BK_NO) ON DELETE SET NULL,
    RENT_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT RENT_FK_MEM FOREIGN KEY (RENT_MEN_NO) REFERENCES TB_MEMBER ON DELETE SET NULL,
    CONSTRAINT RENT_FK_BOOK FORFIGN KEY (RENT_BOOK_NO) REFERENCES TB_BOOK ON DELETE SET NULL
);


--3개 정도의 샘플 데이터 추가하기

INSERT INTO TB_RENT VALUES(1, 111, 06, DEFAULT);
INSERT INTO TB_RENT VALUES(2, 106, 104, DEFAULT);
INSERT INTO TB_RENT VALUES(3, 93, 75, DEFAULT);

--대여목록조회
SELEECT *
FROM TB_RENT
JOIN TB_MEMBER ON (RENT_MEM_NO = MEMBER_NO);


