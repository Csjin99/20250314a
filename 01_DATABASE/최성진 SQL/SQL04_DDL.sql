--1.계정정보를 저장할 카테고리 테이블을 만들려고 한다.
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

--2.과옴구분을 저장할 테이블을 만들어라
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3.TB_CATEGORY NAME 컬럼에 PRIMARY 키 생성
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY(NAME);

--4
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

--5
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);

ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);

--6
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;

--7
ALTER TABLE TB_CATEGORY DROP CONSTRAINT SYS_C008377;
ALTER TABLE TB_CATEGORY ADD CONSTRAINT PK_CATEGORY_NAME PRIMARY KEY(CATEGORY_NAME);

ALTER TABLE TB_CLASS_TYPE DROP CONSTRAINT SYS_C008376;
ALTER TABLE TB_CLASS_TYPE ADD CONSTRAINT PK_CLASS_TYPE_NO PRIMARY KEY(CLASS_TYPE_NO);

--8
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;

--9

ALTER TABLE TB_DEPARTMENT ADD FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

ALTER TABLE TB_DEPARTMENT RENAME CONSTRAINT SYS_C008381 TO FK_DEPARTMENT_CATEGORY;

--10
CREATE VIEW VM_학생일반정보 AS
( SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생이름", STUDENT_ADDRESS AS"주소"
FROM TB_STUDENT
);

--11
DROP VIEW VM_지도면담;
CREATE VIEW VM_지도면담 AS
(SELECT STUDENT_NAME AS "학생 이름", DEPARTMENT_NAME AS "학과이름" ,NVL2(PROFESSOR_NO, PROFESSOR_NAME, '지도교수 없음') AS "지도 교수"
FROM tb_student Q
JOIN tb_department D ON (Q.DEPARTMENT_NO = D.DEPARTMENT_NO)
LEFT JOIN tb_professor ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
)
ORDER BY DEPARTMENT_NAME;

SELECT * FROM VM_지도면담;


--12
DROP VIEW VM_학과별학생수;
CREATE VIEW VM_학과별학생수 AS(
SELECT DEPARTMENT_NAME, COUNT(STUDENT_NO) AS STUDENT_COUNT
FROM tb_department A
JOIN TB_STUDENT S ON(A.DEPARTMENT_NO = S.DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME
);
SELECT * FROM VM_학과별학생수;

--13
UPDATE VM_학생일반정보
SET 학생이름 = '최성진'
WHERE 학번 = 'A213046';

SELECT *
FROM VM_학생일반정보
WHERE 학생이름 = '최성진';

--14
--보기만가능하게 한다
CREATE VIEW VM_학생일반정보 AS
( SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생이름", STUDENT_ADDRESS AS"주소"
FROM TB_STUDENT
)
WITH READ ONLY;

--15 최근3년이 아닌것같습니다 5년을 해야 문제보기와 같습니다.
SELECT * FROM(
SELECT CLASS_NO AS "과목번호", CLASS_NAME AS "과목이름", COUNT(STUDENT_NO) AS "누적수강생수(명)"
FROM TB_CLASS 
JOIN TB_GRADE USING(CLASS_NO)
WHERE TERM_NO LIKE ('2009%') OR TERM_NO LIKE ('2008%') OR TERM_NO  LIKE ('2007%') OR TERM_NO  LIKE ('2006%') OR TERM_NO  LIKE ('2005%')
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY COUNT(STUDENT_NO) DESC)
WHERE ROWNUM <= 3;









